@page "/page/reporte"
@using ClosedXML.Excel;
@using System.Text
@inject IJSRuntime _jsServicio;
@inject IRecepcionServicio _recepcionServicio;
@attribute [Authorize(Roles = "Administrador")]

<MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="mt-5">

    <MudText Typo="Typo.h5" GutterBottom="true">Reporte</MudText>

    <MudPaper Elevation="3" Class="pa-4" Width="100%">

        <div class="d-flex flex-grow-1 gap-3">

            <MudDatePicker Label="Fecha Inicio" PickerVariant="PickerVariant.Dialog" Margin="Margin.Dense" DisableToolbar="true"
                           Variant="Variant.Outlined" DateFormat="dd/MM/yyyy" @bind-Date="fechaInicio" />

            <MudDatePicker Label="Fecha Fin" PickerVariant="PickerVariant.Dialog" Margin="Margin.Dense" DisableToolbar="true"
                           Variant="Variant.Outlined" DateFormat="dd/MM/yyyy" @bind-Date="fechaFin" />


            <MudButton Variant="Variant.Filled"
                       StartIcon="@Icons.Material.Filled.Search"
                       Color="Color.Info"
                       Size="Size.Medium"
                       Class="mt-1"
                       OnClick="Buscar">Buscar</MudButton>

        </div>

        <MudGrid>
            <MudItem xs="12">
            <MudButton Variant="Variant.Filled"
                       StartIcon="@Icons.Material.Filled.DataThresholding"
                       Color="Color.Success"
                       Size="Size.Medium"
                       Class="mt-1"
                       OnClick="ExportarCSV"
                       Disabled="@desactivarBoton">Exportar CSV</MudButton>

            </MudItem>

            <MudItem xs="12">

                <MudTable Items="@lista"
                          Dense="true"
                          Striped="true" Bordered="true"
                          Loading="@_loading" LoadingProgressColor="Color.Info">
                    <HeaderContent>
                        <MudTh>Nombre Cliente</MudTh>
                        <MudTh>Tipo documento</MudTh>
                        <MudTh>Nro Documento</MudTh>
                        <MudTh>Nro Habitacion</MudTh>
                        <MudTh>Fecha Entrada</MudTh>
                        <MudTh>Fecha Salida</MudTh>
                        <MudTh>Total</MudTh>
                    </HeaderContent>
                    <RowTemplate Context="itemRow">
                        <MudTd DataLabel="Nombre Cliente">@itemRow.NombreCliente</MudTd>
                        <MudTd DataLabel="Tipo documento">@itemRow.TipoDocumento</MudTd>
                        <MudTd DataLabel="Nro Documento">@itemRow.NroDocumento</MudTd>
                        <MudTd DataLabel="Nro Habitacion">@itemRow.NroHabitacion</MudTd>
                        <MudTd DataLabel="Fecha Entrada">@itemRow.FechaEntrada</MudTd>
                        <MudTd DataLabel="Fecha Salida">@itemRow.FechaSalida</MudTd>
                        <MudTd DataLabel="Total">@itemRow.TotalPagado</MudTd>
                    </RowTemplate>
                    <PagerContent>
                        <MudTablePager />
                    </PagerContent>
                </MudTable>


            </MudItem>
        </MudGrid>

    </MudPaper>

</MudContainer>

@code {
    List<ReporteDTO> lista = new List<ReporteDTO>();
    private bool _loading = false;
    DateTime? fechaInicio = DateTime.Today;
    DateTime? fechaFin = DateTime.Today;
    private bool desactivarBoton = true;

    private async Task Buscar()
    {
        _loading = true;
        string _fechaInicio;
        string _fechaFin;

        _fechaInicio = fechaInicio.Value.ToString("dd/MM/yyyy");
        _fechaFin = fechaFin.Value.ToString("dd/MM/yyyy");

        var resultado = await _recepcionServicio.Reporte(_fechaInicio, _fechaFin);
        if (resultado.status)
        {
            lista = (List<ReporteDTO>)resultado.value!;

            if (lista.Any())
                desactivarBoton = false;
            else
                desactivarBoton = true;
        }
        else
        {
            lista = new List<ReporteDTO>();
            desactivarBoton = true;
        }

        _loading = false;
    }

    private async Task ExportarCSV()
    {
        if (lista.Any())
        {
            StringBuilder csvContent = new StringBuilder();

            // Header
            csvContent.AppendLine("Nombre Cliente,Tipo documento,Nro Documento,Nro Habitacion,Fecha Entrada,Fecha Salida,Total");

            // Data rows
            foreach (var item in lista)
            {
                csvContent.AppendLine($"{item.NombreCliente},{item.TipoDocumento},{item.NroDocumento},{item.NroHabitacion},{item.FechaEntrada},{item.FechaSalida},{item.TotalPagado}");
            }

            // Download CSV
            var csvBytes = Encoding.UTF8.GetBytes(csvContent.ToString());
            var nombreCSV = $"Reporte_{DateTime.Now:yyyyMMddHHmmss}.csv";

            await _jsServicio.InvokeAsync<object>(
                "DescargarCSV",
                nombreCSV,
                Convert.ToBase64String(csvBytes)
            );
        }
    }

}